{"ast":null,"code":"export const login = async credentials => {\n  const response = await fetch(\"http://localhost:5183/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!response.ok) {\n    throw new Error(\"LOgin fallito\");\n  }\n  const data = await response.json();\n  return data.token; // JWT\n};","map":{"version":3,"names":["login","credentials","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","token"],"sources":["C:/PromoLombardia/client-app/src/api/auth.ts"],"sourcesContent":["export interface LoginRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const login = async (credentials: LoginRequest): Promise<string> => {\r\n  const response = await fetch(\"http://localhost:5183/api/auth/login\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"LOgin fallito\");\r\n  }\r\n\r\n  const data = await response.json();\r\n  return data.token; // JWT\r\n};\r\n"],"mappings":"AAKA,OAAO,MAAMA,KAAK,GAAG,MAAOC,WAAyB,IAAsB;EACzE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;IACnEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;EAClC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClC;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,KAAK,CAAC,CAAC;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}