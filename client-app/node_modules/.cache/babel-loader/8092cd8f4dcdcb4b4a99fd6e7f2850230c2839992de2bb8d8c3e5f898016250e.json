{"ast":null,"code":"export const uploadGalleryImage = async (file, title) => {\n  const token = localStorage.getItem(\"token\");\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"title\", title);\n  const response = await fetch(\"http://localhost:5183/api/gallery-upload\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error(\"Errore nel caricamento dell'immagine\");\n  }\n  return response.json();\n};\nexport const fetchGalleryImages = async () => {\n  const response = await fetch(\"http://localhost:5183/api/gallery\");\n  if (!response.ok) {\n    throw new Error(\"Errore nel caricamento della galleria\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["uploadGalleryImage","file","title","token","localStorage","getItem","formData","FormData","append","response","fetch","method","headers","Authorization","body","ok","Error","json","fetchGalleryImages"],"sources":["C:/PromoLombardia/client-app/src/api/gallery.ts"],"sourcesContent":["export interface GalleryImage {\r\n  id: number;\r\n  fileName: string;\r\n  title?: string;\r\n  data: string;\r\n}\r\n\r\nexport const uploadGalleryImage = async (\r\n  file: File,\r\n  title: string\r\n): Promise<GalleryImage> => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"title\", title);\r\n\r\n  const response = await fetch(\"http://localhost:5183/api/gallery-upload\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: formData,\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Errore nel caricamento dell'immagine\");\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const fetchGalleryImages = async (): Promise<GalleryImage[]> => {\r\n  const response = await fetch(\"http://localhost:5183/api/gallery\");\r\n  if (!response.ok) {\r\n    throw new Error(\"Errore nel caricamento della galleria\");\r\n  }\r\n  return response.json();\r\n};\r\n"],"mappings":"AAOA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAChCC,IAAU,EACVC,KAAa,KACa;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EAC7BK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;EAE/B,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;IACvEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUV,KAAK;IAChC,CAAC;IACDW,IAAI,EAAER;EACR,CAAC,CAAC;EACF,IAAI,CAACG,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;EACA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAqC;EACrE,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EACjE,IAAI,CAACD,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EACA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}